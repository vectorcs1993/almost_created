Техническое задание на движок:
Описание: движок для трехмерного графа с отрисовкой по двум проекциям. Пошаговая система взаимодействия.
Акцент на добыче ресурсов и крафте предметов. Разрушаемое окружение. Синглплеер.
Игрок: 

Идеи: 

без врагов
освоение производства (тайкун) да
фонд высчитывается ЗП и т.д.

1. несколько этажей
2. наем сотрудников
3. 	станки - создание предметов и сборочных единиц;
	рабочие столы - разработка предметов и технологий;
	контейнеры - складирование предметов;
4. 


доступные действия:
(клик по любому объекту) осмотреть
(клик по поверхности) переместиться
(клик по контейнеру, двери) открыть
(клик по соседнему твердому и большому объекту) залезть
(клик по лестнице или веревке) спуститься
(клик по предмету) поднять
(клик по предмету в инвентаре) взять в руку/надеть
(клик по предмету в инвентаре) убрать/снять
(клик по предмету в инвентаре) выбросить
(клик по предмету в инвентаре) использовать
(клик по любому объекту меняющему состояние) включить
(клик по любому объекту меняющему состояние) выключить
(функции персонажа) вкл/выкл свет

Кликер:
	1. сделать класс мир
	2. сделать вложенный класс комната:
			для класса Terminal покупка ресурсов - делаются заказы на ресурсы, по истечению срока доставки появляется ярлык о доставке
			для класса WorkBench создание предметов - даются задания на создание предметов, по завершению работ появляется ярлык об изготовлении
			для класса Container склад - осуществляет хранение предметов, вместимость каждого контейнера ограничена;
			для класса DevelopBench разработка - разрабатываются новые предметы;
	3. сделать класс объекта;
		характеристики объектов:
		контейнеры - список для хранения предметов.
		терминалы - 	Item product изделие на очереди закупки/изготовления/разработки, 
				int count -количество покупаемых изделий
				
		сборочный стол (терминал) - 
				(переопределение) Item product - используется рецепт предмета для его производства (количество предметов в рецепте умножается на количесвто операций),
				(переопределение) int count - количество операций (количество получаемых предметов за 1 операцию может различаться),

		стол разработчика (терминал) - 
				(переопределение) Item product - предмет ожидает вводные характеристики,
				(переопределение) int count = 1 всегда, так как разрабатывается один предмет,


	4. Сделать класс предмета;
	5. сделать класс списка объектов;
	6. сделать класс списка предметов;
	

	
	7. сделать основные предметы (ГП):
		
		ресурсы:
			сталь, ткань, древесина, резина, медь, камень, пластик, стекло
 		

		продукция мебельной промышленности:	
		шкаф платяной (боковина шкафа х2, панель задняя х1, дверца шкафа х2)
			дверца шкафа х1 (панель дверная х2, ручка дерево х2)
				панель дверная х1 (доска х2)
				ручка из дерева (брусок х1)
					брусок х3 (древесина х1)
			панель задняя х1 (доска х4)
			боковина шкафа х1 (доска х3, шарнир х1)
				шарнир дверной (петля х2, пруток стальной х1)
					петля х1 (пластина стальная х1)
					пруток стальной х5 (руда железная х1)
				доска х2 (древесина х1)

		полка настенная х1 ()

		шкаф книжный х1 ()	 

		табурет х1 (сиденье дерево х1, брусок х4)
			сиденье дерево х1 (доски х2)
		стул х1 (сиденье дерево х1, брусок х6)
			
		стол х1 (столешница дерево х1, брусок х4)
			столешница дерево х1 (доска х4)
		диван х1 (каркас дивана х1, пружинный блок х1, поролон мебельный х2, ткань х6)
			каркас дивана х1 (доска х8)
			пружинный блок ()
		кресло (каркас кресла 
		комод
		кровать х1 (каркас кровати х1, матрас х1)
			каркас кровати х1 (доска х6)
			матрас х1 (пружинный блок х2, поролон мебельный х4, ткань х8)
		
		машиностроение:
			
				
			изделия на станках ЧПУ:
				корпус крана шарового х1 (блок стали х1)
				шар стальной х4 (блок стали х1)
				ручка крана х2 (блок стали х1)
				шина х4 (пластина медная х1)
			литье пластмасс:
				корпус реле х10 (пластмасса х1)
				корпус выключателя х10 (пластмасса х1)
				корпус предохранителя ?


		строительные материалы:
		материлы для строительства

		водопроводное оборудование:
			трубы, краны, фитинги и т.д.
				труба х1 (пластина стальная х3)	
				отвод х1 (пластина стальная х2)
				кран шаровый х1 (корпус крана шарового х1, шар стальной х1, ручка крана х1)
			
		
		продукция электротехнической промышленности:
		электрическое оборудование
			шкафы электротехнические:
				шкаф электротехнический х1 (корпус металлический х1, выключатель авт. х4, провод х6) 
			комплектующие:
				кабельная продукция:
					провод х1 (ось медная х1, пластмасса х1)
					кабель 4 жилы х1 (провод х4, пластмасса х1)
				аппаратура: 
					реле (корпус реле х1
					выключатель (корпус выключателя х1
					предохранитель (корпус предохранителя х1
					зажим винтовой (корпус зажима винтового х1)

					
	8. сделать класс Бирку для отображения готовности объектов;
		у объекта Container нет бирки
		у объектов класса Terminal - бирка сигнализирует о поступлении изделия в терминал доставки;
		у объектов класса WorkBench - бирка сигнализирует о создании изделия;
		у объектов класса DevelopBench - бирка сигнализирует о завершении разработки чертежа на изделие;
 
		
		
	
	9. характеристики предметов: int id - уникальный идентификатор, String name - наименование (с БД), int weight - габарит предмета, float cost - рыночная стоимость,
		ItemList reciept - рецепт (кроме ресурсов), int count_product - количество предметов, создаваемое за одну операцию (кроме ресурсов);
	 
	10. вкладки: ОБЪЕКТЫ, ПОСТРОЙКИ, КОМПАНИЯ, СКЛАД, ЗАКАЗЫ.
		на вкладке объекты и постройки отображается комната игрока
			на вкладке объекты: выполнятется управление объектами, закупаются ресурсы, отправляются на склад, выдаются задания, реализуется ГП.
			на вкладке постройки: происходит управления активами (основные фонды) компании, арендуется территория, покупается новое оборудование, 
				разбирается, ремонтируется и/или модернизируется уже имеющееся оборудование;   
		на вкладке склад: отображаются все предметы находящиеся на балансе/в наличии у компании игрока, можно списывать или получать информацию о предмете;
		на вкладке заказы: отображаются текущие заказы на производство, отображающие срок и готовность к выполнению, 
			можно выполнить (при наличии на складе ГП), отменить (полный возврат денег), перенести срок (штраф), выполнить частично (отгрузка и перерасчет оплаты);
 		на вкладке компания: отображается информация о компании, статистика, бюджет;
		


	15. начальные уникальные номера присваиваются по типу "терминал 1", "станок 2", "стол разработчика 1" и т.д. 
	16. в объектах класса Terminal возможно выбрать один ресурс из списка, и заказать его, оплатить нужно сразу, затем запускается таймер доставки и 
		по его истечению над объектом появляется ярлык о завершенной доставке, что бы отправить предмет на склад необходимо кликнуть на ярлыке;
	17. враги отсутствуют, сложность в игре представляет сам процесс производства (тайкун же);
	18. на старте сессии выдается начальный займ;
	19. за игровую валюту возможно: 
		19.1 покупать и улучшать объекты;
		19.2 покупать ресурсы;
		19.3 расширять лимит строительства 
	
	20. игровой валютой придется:
		20.1 выплачивать ЗП работникам.
		20.2 платить за электроэнергию, штрафы и т.д..
		20.3 оплачивать ремонт и модернизацию объектов.


	21. списание денег осуществяется в следующих случаях:
		21.1 покупке предметов в терминалах - списание происходит сразу при покупке, при отмене до выполнения доставки (т.е. до появления их в терминале) деньги возвращаются полностью, 
			при отмене после выполнения доставки предметы возвращаются поставщику а деньги возвращаются частично, за вычетом (транспортных расходов). 
			Завершить заказ возможно только после того как товар попадет на склад.
			Выдавать задание на приобретение возможно только при полном завершении или отмене предыдущего заказа.
		21.2 расходы на производство
			21.2.1 зп работникам - работники должны получать зп, иначе они начнут увольняться. Деньги на зп работникам списываются в конце расчетного периода.
				Работники выполняют работы по закупу, производству и разработке новых предметов.
				Работников можно уволить, сделав им моментальный расчет за отработанные часы.
				НЕ ИНАЧЕ. В ДАЛЬНЕЙШЕМ ВОЗМОЖНО ДОРАБОТАТЬ ДОБАВИВ ТРАНСПОРТИРОВКУ (УСЛОЖНЕНИЕ НЕ В БАЗОВОЙ ВЕРСИИ)
			21.2.2 расходы на э/э - любое оборудование потребляет э/э и чем больше оно используется тем больше потребление. Деньги за э/э списываются в конце расчетного периода.
				При полном износе оборудования оно уничтожается, при этом (в объектах терминалах заказ передается на другой терминал, если он есть, если нет то деньги возвращаются, в объектах
				сборочных столах загруженные в объект ресурсы остаются на месте, в объектах стол разработчика)
			21.2.3 приобретение оборудования - покупка оборудования и размещение на промплощадке. Деньги за покупку списываются сразу.
			21.2.4 ремонт оборудования - любое оборудование подлежит износу (т.е. всё оборудование за исключением контейнеров), и его необходимо ремонтировать. Деньги на ремонт списываются сразу.
			21.2.5 улучшение оборудования - модернизация оборудования улучшает текущие характеристики, такие как скорость, производительность, энергопотребление, износостойкость. Деньги на улучшение списываются сразу.
				Улучшения характеризуется уровнями, с фиксированной конфигурацией настроек. Всего уровней от 1 до 10. 	
		21.3 штрафные санкции - при невыполнении некоторых заказов в срок заказчику платится неустойка. Деньги списываются в конце расчетного периода. 
	22. начисление денежных средств осуществляется в следующих случаях:
		22.1 выполнение заявки на продажу предметов, оплата полностью - за отведенный срок, и частично - за просрочку (штрафные санкции).
		22.2 премирование по результатам работы за месяц (при выполнении плана в определенный порог суммы и количества заявок за расчетный период).
	
	23. каждый объект производства стоит денег, так за терминал доставки придется отвалить 50$.
	24. установлен лимит на количество объектов производства, его можно увеличивать  (покупкой производственных мощностей) УСЛОЖНЕНИЕ НЕ В БАЗОВОЙ ВЕРСИИ.
		например в начале игры задается лимит строительства на 5 построек.
	


	задачи:
	1. сделать интерфейс на объектах терминал для назначения определенного количества операций
		сначала выставляется предмет потом определяется кол-во, и нажимается купить/изготовить
		при покупке - списываются деньги
		при изготовлении - списываются предметы из хранилища

		можно лишь отменить операцию в терминале доставки/сборочном столе 
	2. переименовать объект терминал на терминал доставки.
	3. сделать расчет за приобретаемые в терминале ресурсы.
	4. сделать систему отсчета времени, интегрировать расчет срока доставки в терминал.
	5. сделать класс заказ
	6. каждому предмету определить переменные+ изменения в sql базе данных.




class Item {
	//общие переменные
	int id;
	String name - наименование;
	String description - описание;
	PImage sprite - изображение;
	int weight - вес;
	float cost - стоимость;
	
	
	//переменные для изделий
	ComponentList reciept - рецепт на изготовление предмета за одну операцию (кроме ресурсов);
		//может быть все эти переменные вложить в рецепт ДА!!!!!
	int count_operation - количество предметов на выходе за одну операцию (кроме ресурсов);	
	int scope_of_operation - трудоёмкость изготовления предмета (кроме ресурсов);
	int complexity - сложность разработки (кроме ресурсов);
	

	//переменные для готовой продукции
	float demand - востребованность на рынке в %;
		 - чем выше этот показатель, тем чаще он будет появляться в заказах,
		полностью собранная ГП должна быть более востребована у заказчиков, чем 
		комплектующие, однако спрос на компоненты и запчасти так же должен 
		варьироваться (принимает значения от 0-100).

	stack  - убрать; ненужный рудимент оставшийся с прошлого движка
	

	Item (int id) {
		
	}





}

	

class Company {
	String name;
	float money; //деньги
	int last_id; //номер последнего заказа, изначально равен 0
	OrderList orders; //список заказов

	int getNewId() {
		last_id++;
		return last_id;
	}



}



class Order {
	String label;
	int id;
	Item item;
	int count;
	float cost;
	Date dead_line;	
	Company client; 

	Order (WorkClient client, Item item, int count, float cost, Date dead_line) {
		id=company.getNewId();		
		label="заказ №"+id+" на изделие "+item.name+" ("+count+") ["+dead_line+"]";
		
	}
	
	void draw() {
		text ()
	}
	

}



Проект ЗАВОД:
оставить один вид сверху, убрать проекционную камеру, убрать класс Sprite и т.д.
каждый объект \то наследник AсtiveElement

интерфейсы: 
-содержащие предметы (storagedItem) классы Worker, Terminal, Storage; 

сделать 4 вкладки:
	-объекты;
	-постройки;
	-
сделать 1 класс комната Room
	создать массив невидимой сетки (node[x][y])
	создать вложенный класс Tile (это массив тайлов).
	хранение ячеек списком WorkObjectList. 
	Отрисовка: 	1 - тайлы; (Tile)
			2 - прочие объекты или рабочие (WorkObject); 
	функции: 
		-вернуть абсолютные координаты;
		-отрисовать комнату в соответствии с координатами (x, y);
		-вернуть все объекты в комнате;
		-вернуть все объекты кроме рабочих;
		-вернуть все объекты терминалы;
		-вернуть все объекты контейнеры;
		-вернуть все объекты контейнеры и ;

сделать 5 классов объектов (Общий родитель WorkObject):
	Worker (рабочий) - для выполнения работы (разные характеристики);
	Storage (контейнер) - для складирования предметов (разный объем ;
	WorkBench (станок) - объект для создания предметов;
	DevelopBench (стол разработчика) - объект для разработки новых рецептов предметов;
	Terminal (терминал грузовой) - объкт для закупки ресурсов (позволяет купить любой ресурс за игровую валюту,
		который появится в контейнере спустя определенное время);
сделать 4 вида работы: уборка, сборка, транспортировка, разработка.

сделать 1 класс список предметов ItemList (расширенный с IntList, используется для хранения списков и рецептов);




Синглтон класс - World (world);
Размер мира трехмерный массив ячеек для хранения объектов.
объекты: Enviroment твердый объект, Item объект предмет, Actor - объект персонаж
Функции класса:
-добавление и удаление объектов и предметов

void addSector(int x, int y, int z, Sector sector) 
	sector[x][y][z]=sector;

void removeSector(Sector sector)
	sector.destroy();
	sector[sector.x][sector.y][sector.z]=null;

//возвращает истину если курсор находится под картой
boolean isOver() {
	if (mouseX>=mx && mouseY>=my && mouseX<=size*size_grid && mouseY<=size*size_grid)
		return true;
	else
		return false;
}

//Алгоритм обработки ввода пользователя:
void pressedMouse() {
	if (isOver()) {
		int cX=getAbsCoord(mouseX);
		int cY=getAbsCoord(mouseY);
		Sector currentSector = sector[cX][cY][this.z] 

		//если команда должна выполняться на объектах
		if (getDeep(cx,cY)==0) {
			//если команда перемещения
			currentActor.moveTo(cX,cY);
		}
		
		//если команда должна выполняться на соседних объектах
	}
}


Вложенный класс Camera (cameraAbove, cameraSide),

-отображать камеру вида сверху и вид сбоку.







класс Sector:
переменные:
SpriteSet - набор спрайтов, отвечающий за отображение объекта в текущем виде, учитывая угол поворота объекта;

константы:
поворота: ROTATE0, ROTATE90, ROTATE180, ROTATE 270 и ТД (8 направлений);
вида: FRONT, BACK, LEFT_SIDE, RIGHT_SIDE, ABOVE (4 спрайта); 

методы:
void setDirection(int direction) - поворачивает объект на угол заданный direction (0-7);
PImage getSprite(int view) -возвращает спрайт, и разворачивать, или поворачивать его в зависимости от проекции;
void setSprite(SpriteSet sprite) - устанавливает набор спрайтов;
void destroy() - функция срабатывает при уничтожении объекта;



Для каждого объекта класса Sector: 
-спрайты с вертикальной и горизонтальной проекцией (4 вида). 

Класс Actor сделать наследником класса Sector.




Класс SpriteSet



Функции класса:

void movewTo(int x, int y)-передвигаться в указанные координаты по х и у;
void moveToAbs(Graph point)-абсолютно передвигаться к следующему в списке графу;
boolean getPathTo(int x, int y)-проверять может ли объект беспрепятственно дойти до указанного графа; 
GraphList getPath(Graph target) - возвращает путь (список узлов) для достижения пути


Алгоритм Генерации мира:


http://netlib.narod.ru/library/book0031/ch10_06.htm <<один из неплохих примеров

for (int ix=0; ix<size; ix++) {
	for (int iy=0; iy<size; iy++) {
		for (int iz=0; iz<size; iz++) {
			if ()
			sector[ix][iy][iz]



		}
	}
}

Алгоритм считывания пространства вида:

mx, my - координаты отображения вида;
x,y,z - координаты текущие;
currentView - текущий вид;

УТОЧНИТЬ ИЗ КОДА




