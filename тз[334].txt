Техническое задание на движок:

Кликер:
	1. сделать класс мир
	2. сделать вложенный класс комната:
			для класса Terminal покупка ресурсов - делаются заказы на ресурсы, по истечению срока доставки появляется ярлык о доставке
			для класса WorkBench создание предметов - даются задания на создание предметов, по завершению работ появляется ярлык об изготовлении
			для класса Container склад - осуществляет хранение предметов, вместимость каждого контейнера ограничена;
			для класса DevelopBench разработка - разрабатываются новые предметы;
	3. сделать класс объекта;
		характеристики объектов:
		контейнеры - список для хранения предметов.
		терминалы - 	Item product изделие на очереди закупки/изготовления/разработки, 
				int count -количество покупаемых изделий
				
		сборочный стол (терминал) - 
				(переопределение) Item product - используется рецепт предмета для его производства (количество предметов в рецепте умножается на количесвто операций),
				(переопределение) int count - количество операций (количество получаемых предметов за 1 операцию может различаться),

		стол разработчика (терминал) - 
				(переопределение) Item product - предмет ожидает вводные характеристики,
				(переопределение) int count = 1 всегда, так как разрабатывается один предмет,


	4. Сделать класс предмета;
	5. сделать класс списка объектов;
	6. сделать класс списка предметов;
	

	
	7. сделать основные предметы (ГП):
		
		Основные тиипоразмеры (weight) предмета: 	XS - оч. мал (1)
								S - малый, (2)
								M - средний, (3)
								L - большой, (4)
								XL - очень большой, (5)
								XXL - огромный (6)
		
					



		ресурсы:
			руда железная, руда медная, алюминий,
			камень,
			древесина,
			резина, пластмасса,
			ткань, 
			стекло, керамика
 		

		продукция мебельной промышленности:
		
		в мастерской столярной:
			доска (S) х2 (древесина (M) х1)
			брусок (S) х4 (древесина (M) х1)
			панель (S) х1 (доска х2)
			панель (M) х1 (доска х4)
			панель (L) х1 (доска х6)			
		
		в мастерской каменщика:
			блок каменный (S) x1 (камень (M) х1)




		сборочный стол
			ящик (S) х1 (доска х2, ручка дерево х1)
			ящик (M) х1 (доска х4, ручка дерево х1)
			комод (M) х1 (боковина (M) х2, панель (M) х1, ящик (S) х6)
			комод (L) х1 (боковина (L) х2, панель (L) х1, ящик (M) х3)
			комод (XL) х1 (боковина (XL) х2, панель (XL) х1, ящик (M) х6)





		шкаф платяной XL (боковина большая х2, панель большая х1, дверца шкафа х2)
			дверца шкафа х1 (панель дверная х2, ручка дерево х2)
				панель дверная х1 (доска х2)
				ручка из дерева (брусок х1)
					
			панель большая х1 (доска х4)
			боковина большая х1 (доска х3, шарнир х1)
				шарнир дверной (петля х2, пруток стальной х1)
					петля х1 (пластина стальная х1)
					пруток стальной х5 (руда железная х1)
				

		шкаф книжный х1 (боковина (L) х2, панель малая х2, полка шкафа х5)
			полка шкафа х1 (доска х1)



		стул х1 (сиденье дерево х1, брусок х6)
			
		стол х1 (столешница дерево х1, брусок х4)
			столешница дерево х1 (доска х4)

		диван х1 (каркас дивана х1, пружинный блок х1, поролон мебельный х2, ткань х6)
			каркас дивана х1 (доска х8)
			пружинный блок ()

		кресло (каркас кресла 

		



		кровать х1 (каркас кровати х1, матрас х1)
			каркас кровати х1 (доска х6)
			матрас х1 (пружинный блок х2, поролон мебельный х4, ткань х8)
		

		машиностроение:
			
				
			изделия на станках ЧПУ:
				корпус крана шарового х1 (блок стали х1)
				шар стальной х4 (блок стали х1)
				ручка крана х2 (блок стали х1)
				шина х4 (пластина медная х1)
			литье пластмасс:
				корпус реле х10 (пластмасса х1)
				корпус выключателя х10 (пластмасса х1)
				корпус предохранителя ?


		строительные материалы:
		материлы для строительства

		водопроводное оборудование:
			трубы, краны, фитинги и т.д.
				труба х1 (пластина стальная х3)	
				отвод х1 (пластина стальная х2)
				кран шаровый х1 (корпус крана шарового х1, шар стальной х1, ручка крана х1)
			
		
		продукция электротехнической промышленности:
		электрическое оборудование
			шкафы электротехнические:
				шкаф электротехнический х1 (корпус металлический х1, выключатель авт. х4, провод х6) 
			комплектующие:
				кабельная продукция:
					провод х1 (ось медная х1, пластмасса х1)
				аппаратура: 
					реле (корпус реле х1
					выключатель (корпус выключателя х1
					предохранитель (корпус предохранителя х1
					зажим винтовой (корпус зажима винтового х1)
		

	
		

		
		

		
		


		
		
		

		
		 


	

	Объекты производства:
		
		(ветка компьютерная)
		ресурсы:
			алюминий, кремний, пластмасса
		химическая лаборатория
			пластина кремниевая х1 (кремний х10)
			текстолит х1 (пластмасса х1)
		цех электронных компонентов
			плата печатная х1 (пластина медная х1, текстолит х2)
			компонент электронный х50 (пластина кремниевая х2, корпус компонента х50)
		сброчный цех
			электромотор х1 (провод х5, пруток стальной х1)
			плата электронная х1 (плата печатная х1, компонент электронный х5)
			блок питания х1 (плата электронная х1, радиатор охлаждения х2, кулер х1)
			кулер х1 (корпус кулера х1, электромотор х1)
			процессор х1 (пластина стальная х1, компонент электронный х50)
			плата метеринская х1 (плата печатная х2, компонент электронный х25)
			корпус компьютера х1 ()
			компьютер слабый х1 (корпус компьютера х1, плата материнская х1, 
				кулер х3, 
				радиатор охлаждения х2, 
				процессор х1, 
				блок питания х1) 			
		цех литейный
			блок алюминия х1 (алюминий х5)
		цех механический
			радиатор охлаждения х2 (блок алюминия х1)	
		экструдер
			корпус компонента х1 (пластмасса х2)

		(ветка автопром)
				
	8. сделать класс Бирку для отображения готовности объектов;
		у объекта Container нет бирки
		у объектов класса Terminal - бирка сигнализирует о поступлении изделия в терминал доставки;
		у объектов класса WorkBench - бирка сигнализирует о создании изделия;
		у объектов класса DevelopBench - бирка сигнализирует о завершении разработки чертежа на изделие;
 
		
		
	
	9. характеристики предметов: int id - уникальный идентификатор, String name - наименование (с БД), int weight - габарит предмета, float cost - рыночная стоимость,
		ItemList reciept - рецепт (кроме ресурсов), int count_product - количество предметов, создаваемое за одну операцию (кроме ресурсов);
	 
	10. вкладки: ОБЪЕКТЫ, ПОСТРОЙКИ, КОМПАНИЯ, СКЛАД, ЗАКАЗЫ.
		на вкладке объекты и постройки отображается комната игрока
			на вкладке объекты: выполнятется управление объектами, закупаются ресурсы, отправляются на склад, выдаются задания, реализуется ГП.
			на вкладке постройки: происходит управления активами (основные фонды) компании, арендуется территория, покупается новое оборудование, 
				разбирается, ремонтируется и/или модернизируется уже имеющееся оборудование;   
		на вкладке склад: отображаются все предметы находящиеся на балансе/в наличии у компании игрока, можно списывать или получать информацию о предмете;
		на вкладке заказы: отображаются текущие заказы на производство, отображающие срок и готовность к выполнению, 
			можно выполнить (при наличии на складе ГП), отменить (полный возврат денег), перенести срок (штраф), выполнить частично (отгрузка и перерасчет оплаты);
 		на вкладке компания: отображается информация о компании, статистика, бюджет;
		


	15. начальные уникальные номера присваиваются по типу "терминал 1", "станок 2", "стол разработчика 1" и т.д. 
	16. в объектах класса Terminal возможно выбрать один ресурс из списка, и заказать его, оплатить нужно сразу, затем запускается таймер доставки и 
		по его истечению над объектом появляется ярлык о завершенной доставке, что бы отправить предмет на склад необходимо кликнуть на ярлыке;
	17. враги отсутствуют, сложность в игре представляет сам процесс производства (тайкун же);
	18. на старте сессии выдается начальный займ;
	19. за игровую валюту возможно: 
		19.1 покупать и улучшать объекты;
		19.2 покупать ресурсы;
		19.3 расширять лимит строительства 
	
	20. игровой валютой придется:
		20.1 выплачивать ЗП работникам.
		20.2 платить за электроэнергию, штрафы и т.д..
		20.3 оплачивать ремонт и модернизацию объектов.


	21. списание денег осуществяется в следующих случаях:
		21.1 покупке предметов в терминалах - списание происходит сразу при покупке, при отмене до выполнения доставки (т.е. до появления их в терминале) деньги возвращаются полностью, 
			при отмене после выполнения доставки предметы возвращаются поставщику а деньги возвращаются частично, за вычетом (транспортных расходов). 
			Завершить заказ возможно только после того как товар попадет на склад.
			Выдавать задание на приобретение возможно только при полном завершении или отмене предыдущего заказа.
		21.2 расходы на производство
			21.2.1 зп работникам - работники должны получать зп, иначе они начнут увольняться. Деньги на зп работникам списываются в конце расчетного периода.
				Работники выполняют работы по закупу, производству и разработке новых предметов.
				Работников можно уволить, сделав им моментальный расчет за отработанные часы.
				НЕ ИНАЧЕ. В ДАЛЬНЕЙШЕМ ВОЗМОЖНО ДОРАБОТАТЬ ДОБАВИВ ТРАНСПОРТИРОВКУ (УСЛОЖНЕНИЕ НЕ В БАЗОВОЙ ВЕРСИИ)
			21.2.2 расходы на э/э - любое оборудование потребляет э/э и чем больше оно используется тем больше потребление. Деньги за э/э списываются в конце расчетного периода.
				При полном износе оборудования оно уничтожается, при этом (в объектах терминалах заказ передается на другой терминал, если он есть, если нет то деньги возвращаются, в объектах
				сборочных столах загруженные в объект ресурсы остаются на месте, в объектах стол разработчика)
			21.2.3 приобретение оборудования - покупка оборудования и размещение на промплощадке. Деньги за покупку списываются сразу.
			21.2.4 ремонт оборудования - любое оборудование подлежит износу (т.е. всё оборудование за исключением контейнеров), и его необходимо ремонтировать. Деньги на ремонт списываются сразу.
			21.2.5 улучшение оборудования - модернизация оборудования улучшает текущие характеристики, такие как скорость, производительность, энергопотребление, износостойкость. Деньги на улучшение списываются сразу.
				Улучшения характеризуется уровнями, с фиксированной конфигурацией настроек. Всего уровней от 1 до 10. 	
		21.3 штрафные санкции - при невыполнении некоторых заказов в срок заказчику платится неустойка. Деньги списываются в конце расчетного периода. 
	22. начисление денежных средств осуществляется в следующих случаях:
		22.1 выполнение заявки на продажу предметов, оплата полностью - за отведенный срок, и частично - за просрочку (штрафные санкции).
		22.2 премирование по результатам работы за месяц (при выполнении плана в определенный порог суммы и количества заявок за расчетный период).
	
	23. каждый объект производства стоит денег, так за терминал доставки придется отвалить 50$.
	24. установлен лимит на количество объектов производства, его можно увеличивать  (покупкой производственных мощностей) УСЛОЖНЕНИЕ НЕ В БАЗОВОЙ ВЕРСИИ.
		например в начале игры задается лимит строительства на 5 построек.
	
	25. рейтинг компаний, во складке компании игрок сможет посмотреть какое место на рынке по уровню дохода
		занимает его компани. Всего будет 50 конкурирующих компаний с постоянно изменяющейся динамикой цен
		чем больше вы покупаете предметов тем больше 
	26. предметы появляются:


		базовые:
		
		контейнер - для хранения.
		терминал доставки - все ресурсы;
		сборочный цех - все сборочные единицы 1 габарита.
		сборочный участок - все сборочные единицы габарита 2 и выше.
		механический цех - изделия для машиностроения.
		литейная мастерская - изделия литые из металлов.
		столярная мастерская - изделия из дерева.
		резчик по камню - изделия из камня.
		экструдер - изделия из пластимассы.



		ОБНОВЛЕНИЕ:
		фабрика электронных компонентов - изделия электронной промышленности.
		химическая лаборатория - изделия химической промышленности.
		
		нарколаборатория - очень выгодные заказы.
		
		
		
		
	27. когда объект производственный выходит из строя то изготовление предметов останавливается, по этому
		следует следить за состоянием станков, проводить тех обслуживание и модернизировать увеличивая
		износостойкость. Всего уровней  у каждого объекта  - 5.
				контейнеры:	объекты прозводства:
		Стоимость: 	вместимость:	износостойкость(wear):  скорость(speed):   запас прочности(hp):   энергопотребление(energy_leak):		
		1 - базовый.	20		1			1			50			1
		2 - 200		40		2			2			80			2
		3 - 400		60		3			3			130			3
		4 - 800		80		4			4			160			4
		5 - 1600	100		5			5			200			5
	
	28. каждый рабочий тик! объектов производства потребляет кол-во электроэнергии, которая копится.
		что бы обоудование работало необходимо подключать к ним генератор (оборудование ставится в
		в пределах рабочей зоны)	

	задачи:
	1. сделать интерфейс на объектах терминал для назначения определенного количества операций
		сначала выставляется предмет потом определяется кол-во, и нажимается купить/изготовить/разработать
		при покупке - списываются деньги
		при изготовлении - списываются предметы из хранилища
		при разработке отсутствует выбор количества, присутствует только информация о сложности разработки и расчет
			стоимости, стоимость рассчитывается: сложность разработки*25$;
		можно лишь отменить операцию в терминале доставки/столе сборочном/столе разработчика

	2. ок переименовать объект терминал на терминал доставки.
	3. сделать расчет за приобретаемые в терминале ресурсы.
	4. сделать систему отсчета времени, интегрировать расчет срока доставки в терминал.
	5. сделать класс заказ
	6. ок каждому предмету определить переменные+ изменения в sql базе данных.
	7. ок сделать разные списки заказов, доступные, открытые, закрытые, отмененные.
	8. сделать класс контроллер В ОБНОВЛЕНИИ, создать много рандомных компаний во время старта сессии, 
		каждая компания будет владеть имуществом и подчиняться алгоритму выдачи и принятии заказов.
	9. с целью унификации системы хранения предметов уничтожить класс ItemList, 
		взамен оставить ComponentList, обеспечить хранение данных в числовом формате;
	10. ок метод "isItems" в ComponentList переименовать в "IsComponents"












void run() {
	if (object instanceof Terminal) {
		boolean purchase=false, useItem=false, develop=false; 
		Terminal terminal = (Terminal) object;
		if (!(terminal instanceof DevelopBench)) {
			if (terminal instanceof Workbench)
				useItem = true;
			else 
				purchase=true;	
		} else 
			develop=true;
		if (useItem) {	
			if (world.room.getItems().isItems(terminal.product.reciept)) //проверяет есть ли предметы на складах
				world.room.getItems().removeItems(terminal.product.reciept); //использует предметы 
			else {
				//сообщение НЕ ХВАТАЕТ КОМПОНЕНТОВ НА СКЛАДЕ
				world.room.getItems().getNeedItems(terminal.product.reciept);
			}
		} else if (purchase) {
			if (cost<world.company.money)
				world.company.money-=cost;
			else
				//сообщение НЕ ХВАТАЕТ СРЕДСТВ НА ПОКУПКУ
		} else if (develop) {
			if (cost_develop<world.company.money)
				world.company.money-=cost_develop;
			else
				//сообщение НЕ ХВАТАЕТ СРЕДСТВ НА РАЗРАБОТКУ
		}

	}
}


Методы ComponentList:

ComponentList getNeedItems(ComponentList items) {
	ComponentList needs = new ComponentList(data.ITEMS);
	for (int part : items.sortItem()) {  //сортировка по id
		int countNeed = items.calculationItem(part);
		int countCurrent = this.calculationItem(part);
		if (countCurrent<countNeed) { //проверка на соответствие количества
			for (int need : countNeed-countCurrent)
				needs.append(need);
		}
	}	
	return needs;
}
boolean isComponents(ComponentList items) {
	for (int part : items.sortItem()) {  //сортировка по id
		if (this.calculationItem(part)<items.calculationItem(part)) { //проверка на соответствие количества
			return false;  //количество не соответствует
		}
	}	
	return true;
}

void removeItems(ComponentList items) {
	if (!isItems(items))
		return;
	else { 
		for (int part : items) {
			if (this.hasValue(part))
				this.removeValue(part);
	
		}
	}
}
		

class Item {
	//общие переменные
	final int id;
	String name - наименование;
	String description - описание;
	PImage sprite - изображение;
	int weight - габарит (от него зависит стоимость доставки если ресурс и 
		на каких объектах может собираться предмет, если он изделие);
	float cost - стоимость;
	final static int ALL=0, 
			PRODUCTS=1, изделия
			GP=2, - готовая продукция, головные сборки (т.е.
			такие которые не встречаются ни в чьих рецептах). 
			RESOURCES=3, 
			
			DETAILS=4, ASSEMBY_UNITS=5 - детали и СБ;
	int workObject ссылка на объект где должен изготавливаться предмет
	
	//переменные для изделий
	ComponentList reciept - рецепт на изготовление предмета за одну операцию (кроме ресурсов);
		//может быть все эти переменные вложить в рецепт ДА!!!!!
	int count_operation - количество предметов на выходе за одну операцию (кроме ресурсов);	
	int scope_of_operation - трудоёмкость изготовления предмета (кроме ресурсов);
	int complexity - сложность разработки (кроме ресурсов);
	final String company - обозначение компании изготовителя продукции; (СДЕЛАТЬ В ОБНОВЛЕНИИ)
	float cost_develop - стоимость разработки;
	
	//переменные для готовой продукции
	float demand - востребованность на рынке в %;
		 - чем выше этот показатель, тем чаще он будет появляться в заказах,
		полностью собранная ГП должна быть более востребована у заказчиков, чем 
		комплектующие, однако спрос на компоненты и запчасти так же должен 
		варьироваться (принимает значения от 0-100) (ДОБАВИТЬ В ОБНОВЛЕНИЕ).	

	Item (int id) {
		company = "неизвестно";
		
	}


}

class Date {
	int day, month, year;
	static int JANUARY=0, 
	Date () {
		day=mount=year=1;


	}
	long getTick() {
		return 60000;
	}
	void update() {
		day++;
		if (day>30) {
			day=1;
			month++;
			if (month>11) 
				year++;
		} 
			
	}


}

	

class Company {
	String name;
	float money; //деньги
	int last_id; //номер последнего заказа, изначально равен 0
	OrderList orders; //список заказов

	int getNewId() {
		last_id++;
		return last_id;
	}



}



class Order {
	String label;
	int id;
	Item item;
	int count;
	float cost;
	Date dead_line;	
	Company client; 

	Order (WorkClient client, Item item, int count, float cost, Date dead_line) {
		id=company.getNewId();		
		label="заказ №"+id+" на изделие "+item.name;
		
		
	}
	String getDescript() {
		return "количество: "+count+"\n"+
			"награда: "+cost+"\n"+
			"срок: "+date.getDescript()+"\n";
	}
	
	void draw() {
		text (label, 5, 20);
	}
	

}
Алгоритм генерации новых заказов:
1. определяет изделие;
2. определяет требуемое количество (чем выше сборки по составу тем количество меньше);
3. расчитывает общую стоимость по количеству;
4. определяет срочность;
5. расчитывает поправочный коэффициент срочности,(больше дальше срок тем меньше коэффициент)
	корректирует общую стоимость с учетом коэффициента;
6. расчитывает поправочный коэффициент стоимости доставки,(больше дальше расстояние тем больше коэффициент)
	корректирует общую стоимость с учетом коэффициента; 


Алгоритм игры:
Игрок открывает любой из доступных заказов, предварительно прикидывая (или расчитав)
общую стоимость изготовления, при необходимости 
начинает разрабатывать чертежи на детали или сборочные единицы (далее ДСЕ), параллельно с этим, 
по необходимости закупает ресурсы и/или изделия в терминале доставки. При этом ресурсы можно только закупать,
а изделия возможно изготовить на различных станках или сборочных столах. Закупать или изготавливать изделия 
игрок решает сам, зачастую этот выбор обусловлен рядом факторов: изделия отсутствуют на рынке в данный момент, 
таким образом закупка не представляется возможной, либо это разница в цене, некоторые изделия выгоднее изготовить
чем купить, особенно если чертеж на изделие уже разработан. 
Наряду с эти необходимо учитывать наличие свободного места для хранения ресурсов и изделий, производственная
площадь ограничена, по этому соотношение складов и производственного оборудования игрок определяет сам.
При наличие определенного количества ГП на складе игрок может закрыть заказ, получив вознаграждение.   
По достижению срока заказа 
Ресурсы (материалы) - это предметы, которые невозможно изготовить, их можно только купить.
Заготовки - это вид изделия, чертежи и рецепты на которые изначально доступны.
Детали - это вид изделия изготовленный из заготовки, чертежи на детали небходимо разрабатывать.
Сборочные единицы - это вид изделия изготовленные из нескольких деталей и/или сборочных единиц.

идеи:
1 ручное создание заказов
2 минимальные и максимальные цены на заказ

виды работ:

разработка чертежей (стол разработчика)
транспортировка (перемещение любых предметов)
сборка изделий (сборочный стол)
закупка сырья (терминал доставки)
литье пластмасс (экструдер)
литье металлов (плавильня)
обработка металлов (станок ЧПУ)
обработка дерева (резчик по дереву)
обработка камня (резчик по камню)
ремонт оборудования (все оборудование)


на очереди:
-изменения по движку:
1. внедрить следующий навык и вид работ: изготовление деталей и сборка изделий разделить в разные виды работ и навыков (сделано)
2. изменить алгоритм учета предметов, сделать учет повсеместным, предметы должны быть доступны для логистики как из контейнеров, 
    так и из вне. Это необходимо сделать для последующих нововведений касательно габарита предметов и их стэков. (сделано частично, исправить алгоритм сдачи заказов)
3. внедрить систему габаритов и стэков, разделить все предметы по габаритам (сделано):
    предметы занимают следующее количество мест:
    1.малый S 1 место (мелкие детальки, прутки, оси, крепеж и т.д.)
    2.средний M 2 места (стандартные детали общего назначения)
    3.большой L 10 мест (технологические сборки, например мост автомобиля, двигатель и т.д.)
    4.очень большой XXL 100 мест (автомобиль, запрещено складировать в контейнеры)
   стек каждой из клеток может занимать не более 100 мест. т.е. в одну клетку объемом в 100 мест может уместиться либо: 
    100 малых предметов
    50 средних предметов
    10 больших предметов
    1 очень большой предмет
   в контейнерах запрещено размещать предметы с габаритом XL (очень большой), для этого и введен учет предметов 
    размещенных вне контейнеров.
   В классе Item ввести статическую переменную size.
4. ввести объект участок сборочный на котором будет осуществляться сборка изделий с габаритом XL (автомобиль)
5. внедрить функцию отмены задания на объектах производства (мастерские и участки). При отмене задания возможно 2 исхода событий:
    если процесс изготовления запущен: теряется часть компонентов, оставшиеся компоненты выгружаются.
    если процесс не запущен: загруженные компоненты выгружаются.
6. рассмотреть возможность внедрения еще одного вида работ: строительство и/или использовать имеющийся навык ремонт для возведения
    объектов производства, на это требуется время и ресурсы. Игрок указывает место для размещения объекта, рабочий приносит
    в объект ресурсы и возводит постройку.
    
7. исправить проблему с проебанными предметами функции addItem.
8. исправить взятие предметов для верстаков (сделано)
9. изменить приоритет работы транспортировка (сделать низкий приоритет) (сделано)
10. убрать цену разработки деталей и сборочных единиц (рабочим платится зп)


-формирование контента:
1. внедрить головной рецепт: автомобиль

